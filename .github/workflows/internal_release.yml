name: Internal Release

on:
  push:
    branches:
      - main

jobs:
  github_release:
    if: |
      contains(github.event.head_commit.message, 'Automatic release')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout GIT
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Verify Commit Author
        id: verify_author
        run: |
          AUTHOR=$(git log -1 --pretty=format:'%an')
          if [ "$AUTHOR" != "github-actions[bot]" ]; then
            echo "Commit not authored by github-actions[bot], exiting."
            exit 1
          fi

      - name: Setup Java SDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '18'

      - name: Enable Gradle Wrapper caching (optimization)
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Get version name and code from libs.versions.toml
        id: get_version
        run: |
          VERSION_NAME=$(grep 'version-name =' gradle/libs.versions.toml | awk -F'=' '{print $2}' | tr -d ' "')
          VERSION_CODE=$(grep 'version-code =' gradle/libs.versions.toml | awk -F'=' '{print $2}' | tr -d ' "')
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          TAG_NAME="v${{ env.VERSION_NAME }}-${{ env.VERSION_CODE }}"
          git tag $TAG_NAME
          git push origin $TAG_NAME
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Build Demo APK
        run: ./gradlew assembleDemo

      - name: Upload APK to Github Actions
        uses: actions/upload-artifact@v4
        with:
          name: Ivy-Wallet-Demo.apk
          path: app/build/outputs/apk/demo/app-demo.apk

      - name: Prepare changelog for GitHub Release
        id: changelog
        continue-on-error: true
        uses: Bullrich/generate-release-changelog@master
        env:
          REPO: ${{ github.repository }}

      - name: Create GitHub Release
        id: create_github_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload APK to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_github_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/demo/app-demo.apk
          asset_name: Ivy-Wallet-${{ env.TAG_NAME }}.apk
          asset_content_type: application/vnd.android.package-archive
